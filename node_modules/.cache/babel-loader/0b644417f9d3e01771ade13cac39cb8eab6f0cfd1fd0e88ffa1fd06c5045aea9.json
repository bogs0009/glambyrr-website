{"ast":null,"code":"var _jsxFileName = \"/Users/silvestre/glambyrr-website/src/components/Navbar.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\nimport { Link } from 'react-scroll';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li><Link to=\"home\" smooth={true} duration={500}>Home</Link></li>\n        <li><Link to=\"services\" smooth={true} duration={500}>Services</Link></li>\n        <li><Link to=\"portfolio\" smooth={true} duration={500}>Portfolio</Link></li>\n        <li><Link to=\"about\" smooth={true} duration={500}>About</Link></li>\n        <li><Link to=\"contact\" smooth={true} duration={500}>Contact</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;*/\nimport React, { useState } from 'react';\nimport { Link } from 'react-scroll';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"home\",\n        spy: true,\n        smooth: true,\n        offset: -70,\n        duration: 500,\n        className: \"logo-link\",\n        onClick: closeMobileMenu,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/Logo-GlambyRR.png\",\n          alt: \"GlambyRR\",\n          className: \"logo-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `nav-links ${isMobileMenuOpen ? 'open' : ''}`,\n        children: ['home', 'services', 'portfolio', 'about', 'contacts'].map(section => /*#__PURE__*/_jsxDEV(Link, {\n          to: section,\n          spy: true,\n          smooth: true,\n          offset: -70,\n          duration: 500,\n          className: \"nav-link\",\n          activeClass: \"active\",\n          onClick: closeMobileMenu,\n          children: section.charAt(0).toUpperCase() + section.slice(1)\n        }, section, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hamburger\",\n        onClick: toggleMenu,\n        children: isMobileMenuOpen ? '✕' : '☰'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"QerECOS75+B7gv+k3q7FrDf39mc=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Navbar","_s","isMobileMenuOpen","setIsMobileMenuOpen","toggleMenu","closeMobileMenu","className","children","to","spy","smooth","offset","duration","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","section","activeClass","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/silvestre/glambyrr-website/src/components/Navbar.js"],"sourcesContent":["/*import React from 'react';\nimport { Link } from 'react-scroll';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li><Link to=\"home\" smooth={true} duration={500}>Home</Link></li>\n        <li><Link to=\"services\" smooth={true} duration={500}>Services</Link></li>\n        <li><Link to=\"portfolio\" smooth={true} duration={500}>Portfolio</Link></li>\n        <li><Link to=\"about\" smooth={true} duration={500}>About</Link></li>\n        <li><Link to=\"contact\" smooth={true} duration={500}>Contact</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;*/\nimport React, { useState } from 'react';\nimport { Link } from 'react-scroll';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        <Link\n          to=\"home\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n          className=\"logo-link\"\n          onClick={closeMobileMenu}\n        >\n          <img src=\"/images/Logo-GlambyRR.png\" alt=\"GlambyRR\" className=\"logo-img\" />\n        </Link>\n\n        <div className={`nav-links ${isMobileMenuOpen ? 'open' : ''}`}>\n          {['home', 'services', 'portfolio', 'about', 'contacts'].map((section) => (\n            <Link\n              key={section}\n              to={section}\n              spy={true}\n              smooth={true}\n              offset={-70}\n              duration={500}\n              className=\"nav-link\"\n              activeClass=\"active\"\n              onClick={closeMobileMenu}\n            >\n              {section.charAt(0).toUpperCase() + section.slice(1)}\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"hamburger\" onClick={toggleMenu}>\n          {isMobileMenuOpen ? '✕' : '☰'}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBD,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BF,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBR,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BR,OAAA,CAACF,IAAI;QACHW,EAAE,EAAC,MAAM;QACTC,GAAG,EAAE,IAAK;QACVC,MAAM,EAAE,IAAK;QACbC,MAAM,EAAE,CAAC,EAAG;QACZC,QAAQ,EAAE,GAAI;QACdN,SAAS,EAAC,WAAW;QACrBO,OAAO,EAAER,eAAgB;QAAAE,QAAA,eAEzBR,OAAA;UAAKe,GAAG,EAAC,2BAA2B;UAACC,GAAG,EAAC,UAAU;UAACT,SAAS,EAAC;QAAU;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAEPpB,OAAA;QAAKO,SAAS,EAAE,aAAaJ,gBAAgB,GAAG,MAAM,GAAG,EAAE,EAAG;QAAAK,QAAA,EAC3D,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,CAAC,CAACa,GAAG,CAAEC,OAAO,iBAClEtB,OAAA,CAACF,IAAI;UAEHW,EAAE,EAAEa,OAAQ;UACZZ,GAAG,EAAE,IAAK;UACVC,MAAM,EAAE,IAAK;UACbC,MAAM,EAAE,CAAC,EAAG;UACZC,QAAQ,EAAE,GAAI;UACdN,SAAS,EAAC,UAAU;UACpBgB,WAAW,EAAC,QAAQ;UACpBT,OAAO,EAAER,eAAgB;UAAAE,QAAA,EAExBc,OAAO,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,OAAO,CAACI,KAAK,CAAC,CAAC;QAAC,GAV9CJ,OAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWR,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENpB,OAAA;QAAKO,SAAS,EAAC,WAAW;QAACO,OAAO,EAAET,UAAW;QAAAG,QAAA,EAC5CL,gBAAgB,GAAG,GAAG,GAAG;MAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}